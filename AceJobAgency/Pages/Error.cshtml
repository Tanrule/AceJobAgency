@page
@model ErrorModel
@{
    ViewData["Title"] = "Error";
}

@*<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to the <strong>Development</strong> environment displays detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>*@


<style type="text/css">
       
       body
{
	font-family: 'Rubik', sans-serif;
}

h1,h2,h3,h4,h5,h6,p
{
	margin: 0px;
	padding: 0px;
}

.error_container
{
	width: 100%;
	height: 100%;
}

.error_block
{
	width: 40%;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%,-50%);
	text-align: center;
}

.error_block h1
{
	font-size: 80px;
	color: #3f3a64;
}

.error_block h3
{
	font-size: 40px;
	color: #3f3a64;
}

.error_btn
{
	width: 250px;
	height: 45px;
	background: #0070c6;
	border:none;
	border-radius: 5px;
	color: #fff;
	font-size: 18px;
	font-weight: 600;
	margin-top: 30px;
	cursor: pointer;
}

   </style>
   
   <div class="error_container">
	   <div class="error_block">
	 	   <h1>@Model.ErrorCode</h1>
			@if(!string.Equals(Model.ErrorMessage, null))
			{
				<h3>Oops... @Model.ErrorMessage</h3>
			}
			else{
				<h3>Oops... Something went wrong, please try again!</h3>
			}
			@if(!string.Equals(Model.ErrorDescription, null))
			{
				<p>@Model.ErrorDescription</p>
			}
		   <input type="button" onclick="window.location = '/'" class="error_btn" value="Go to Home">
       </div>
	</div>
